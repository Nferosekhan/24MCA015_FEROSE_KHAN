{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Working\\\\Downloads\\\\Take Home Assignment\\\\src\\\\MovieDetails.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n\nfunction MovieDetails() {\n  const {\n    id\n  } = useParams();\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    async function fetchMovie() {\n      const res = await fetch(`/api/movies/${id}`);\n      const payload = await res.json();\n      setMovie(payload.data);\n    }\n\n    fetchMovie();\n  }, [id]);\n  if (!movie) return /*#__PURE__*/React.createElement(\"p\", {\n    className: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 22\n    }\n  }, \"Loading...\"); // Fix release_date formatting\n\n  let localizedDate = movie.release_date;\n\n  if (localizedDate && localizedDate.includes(\"/\")) {\n    const [day, month, year] = movie.release_date.split(\"/\");\n    localizedDate = new Date(`20${year}-${month}-${day}`).toLocaleDateString(navigator.language);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    className: \"back-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"\\u2190 Back to Movies List\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Poster Image\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, movie.title), movie.tagline && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tagline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, \"\\u201C\", movie.tagline, \"\\u201D\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 14\n    }\n  }, \"Overview:\"), \" \", movie.overview || \"No overview available\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }\n  }, \"Release Date:\"), \" \", localizedDate || \"Unknown\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 14\n    }\n  }, \"Runtime:\"), \" \", movie.runtime || \"?\", \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 14\n    }\n  }, \"Status:\"), \" \", movie.status || \"N/A\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 14\n    }\n  }, \"Rating:\"), \" \\u2B50 \", movie.vote_average || 0, \" / 10\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  }, \"Votes:\"), \" \", movie.vote_count || 0))));\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["C:/Users/Working/Downloads/Take Home Assignment/src/MovieDetails.js"],"names":["React","useEffect","useState","useParams","Link","MovieDetails","id","movie","setMovie","fetchMovie","res","fetch","payload","json","data","localizedDate","release_date","includes","day","month","year","split","Date","toLocaleDateString","navigator","language","title","tagline","overview","runtime","status","vote_average","vote_count"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nfunction MovieDetails() {\r\n  const { id } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchMovie() {\r\n      const res = await fetch(`/api/movies/${id}`);\r\n      const payload = await res.json();\r\n      setMovie(payload.data);\r\n    }\r\n    fetchMovie();\r\n  }, [id]);\r\n\r\n  if (!movie) return <p className=\"loading\">Loading...</p>;\r\n\r\n  // Fix release_date formatting\r\n  let localizedDate = movie.release_date;\r\n  if (localizedDate && localizedDate.includes(\"/\")) {\r\n    const [day, month, year] = movie.release_date.split(\"/\");\r\n    localizedDate = new Date(`20${year}-${month}-${day}`).toLocaleDateString(\r\n      navigator.language\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"movie-details\">\r\n      <Link to=\"/\" className=\"back-link\">← Back to Movies List</Link>\r\n\r\n      <div className=\"details-card\">\r\n        {/* Poster placeholder */}\r\n        <div className=\"poster\">Poster Image</div>\r\n\r\n        {/* Movie Info */}\r\n        <div className=\"info\">\r\n          <h2>{movie.title}</h2>\r\n          {movie.tagline && <p className=\"tagline\">“{movie.tagline}”</p>}\r\n\r\n          <p><strong>Overview:</strong> {movie.overview || \"No overview available\"}</p>\r\n          <p><strong>Release Date:</strong> {localizedDate || \"Unknown\"}</p>\r\n          <p><strong>Runtime:</strong> {movie.runtime || \"?\"} minutes</p>\r\n          <p><strong>Status:</strong> {movie.status || \"N/A\"}</p>\r\n          <p><strong>Rating:</strong> ⭐ {movie.vote_average || 0} / 10</p>\r\n          <p><strong>Votes:</strong> {movie.vote_count || 0}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;"]},"metadata":{},"sourceType":"module"}