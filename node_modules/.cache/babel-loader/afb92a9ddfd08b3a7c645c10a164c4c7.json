{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Working\\\\Downloads\\\\Take Home Assignment\\\\src\\\\ListMovies.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction ListMovies() {\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const moviesPerPage = 8;\n  useEffect(() => {\n    async function fetchMovies() {\n      const res = await fetch(\"/api/movies\");\n      const payload = await res.json();\n      setMovies(payload.data);\n    }\n\n    fetchMovies();\n  }, []); // Filter movies by search term\n\n  const filteredMovies = movies.filter(movie => movie.title.toLowerCase().includes(searchTerm.toLowerCase())); // Pagination logic on filtered movies\n\n  const indexOfLastMovie = currentPage * moviesPerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n  const currentMovies = filteredMovies.slice(indexOfFirstMovie, indexOfLastMovie);\n  const totalPages = Math.ceil(filteredMovies.length / moviesPerPage);\n\n  const handleNext = () => {\n    if (currentPage < totalPages) setCurrentPage(currentPage + 1);\n  };\n\n  const handlePrev = () => {\n    if (currentPage > 1) setCurrentPage(currentPage - 1);\n  }; // Reset to page 1 whenever search changes\n\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [searchTerm]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movies-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"\\uD83C\\uDFAC Mov\", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      borderBottom: \"6px solid royalblue\",\n      paddingBottom: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"ies Col\"), \"lection\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-bar\",\n    style: {\n      marginBottom: \"20px\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search movie by title...\",\n    value: searchTerm,\n    onChange: e => setSearchTerm(e.target.value),\n    style: {\n      padding: \"10px\",\n      width: \"60%\",\n      borderRadius: \"6px\",\n      border: \"1px solid #ccc\",\n      fontSize: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movies-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, currentMovies.length > 0 ? currentMovies.map(movie => /*#__PURE__*/React.createElement(\"div\", {\n    key: movie.id,\n    className: \"movie-card\",\n    style: {\n      backgroundColor: \"#8dfff4\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      color: \"#000000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, movie.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tagline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, movie.tagline || \"No tagline\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"#000000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"\\u2B50 \", movie.vote_average, \" / 10\"), /*#__PURE__*/React.createElement(Link, {\n    to: `/movies/${movie.id}`,\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"View Details \\u2192\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"No movies found\")), filteredMovies.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePrev,\n    disabled: currentPage === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Page \", currentPage, \" of \", totalPages), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNext,\n    disabled: currentPage === totalPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Next\")));\n}\n\nexport default ListMovies;","map":{"version":3,"sources":["C:/Users/Working/Downloads/Take Home Assignment/src/ListMovies.js"],"names":["React","useEffect","useState","Link","ListMovies","movies","setMovies","currentPage","setCurrentPage","searchTerm","setSearchTerm","moviesPerPage","fetchMovies","res","fetch","payload","json","data","filteredMovies","filter","movie","title","toLowerCase","includes","indexOfLastMovie","indexOfFirstMovie","currentMovies","slice","totalPages","Math","ceil","length","handleNext","handlePrev","borderBottom","paddingBottom","marginBottom","textAlign","e","target","value","padding","width","borderRadius","border","fontSize","map","id","backgroundColor","color","tagline","vote_average","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ListMovies() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const moviesPerPage = 8;\r\n\r\n  useEffect(() => {\r\n    async function fetchMovies() {\r\n      const res = await fetch(\"/api/movies\");\r\n      const payload = await res.json();\r\n      setMovies(payload.data);\r\n    }\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  // Filter movies by search term\r\n  const filteredMovies = movies.filter((movie) =>\r\n    movie.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Pagination logic on filtered movies\r\n  const indexOfLastMovie = currentPage * moviesPerPage;\r\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\r\n  const currentMovies = filteredMovies.slice(indexOfFirstMovie, indexOfLastMovie);\r\n\r\n  const totalPages = Math.ceil(filteredMovies.length / moviesPerPage);\r\n\r\n  const handleNext = () => {\r\n    if (currentPage < totalPages) setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    if (currentPage > 1) setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  // Reset to page 1 whenever search changes\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <div className=\"movies-wrapper\">\r\n      <h2 className=\"page-title\">\r\n        🎬 Mov\r\n        <span style={{ borderBottom: \"6px solid royalblue\", paddingBottom: \"10px\" }}>\r\n          ies Col\r\n        </span>\r\n        lection\r\n      </h2>\r\n\r\n      {/* 🔍 Search Bar */}\r\n      <div className=\"search-bar\" style={{ marginBottom: \"20px\", textAlign: \"center\" }}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search movie by title...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          style={{\r\n            padding: \"10px\",\r\n            width: \"60%\",\r\n            borderRadius: \"6px\",\r\n            border: \"1px solid #ccc\",\r\n            fontSize: \"16px\",\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"movies-container\">\r\n        {currentMovies.length > 0 ? (\r\n          currentMovies.map((movie) => (\r\n            <div key={movie.id} className=\"movie-card\" style={{ backgroundColor: \"#8dfff4\" }}>\r\n              <h3 style={{ color: \"#000000\" }}>{movie.title}</h3>\r\n              <p className=\"tagline\">{movie.tagline || \"No tagline\"}</p>\r\n              <p style={{ color: \"#000000\" }}>⭐ {movie.vote_average} / 10</p>\r\n              <Link to={`/movies/${movie.id}`} className=\"btn btn-dark\">\r\n                View Details →\r\n              </Link>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p style={{ textAlign: \"center\", marginTop: \"20px\" }}>No movies found</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Pagination Controls */}\r\n      {filteredMovies.length > 0 && (\r\n        <div className=\"pagination\">\r\n          <button onClick={handlePrev} disabled={currentPage === 1}>\r\n            Prev\r\n          </button>\r\n          <span>\r\n            Page {currentPage} of {totalPages}\r\n          </span>\r\n          <button onClick={handleNext} disabled={currentPage === totalPages}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListMovies;"]},"metadata":{},"sourceType":"module"}